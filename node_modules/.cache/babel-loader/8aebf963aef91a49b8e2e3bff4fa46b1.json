{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stevie\\\\new-task-manager-app\\\\src\\\\Components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport Calendar from 'react-calendar';\nimport { useState } from 'react';\nimport useFetch from './useFetch';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarDisplay = () => {\n  _s();\n\n  const [date, setDate] = useState(new Date());\n  const {\n    data: tasks,\n    isLoading,\n    error\n  } = useFetch('http://localhost:7000/tasks');\n\n  const onChange = date => {\n    setDate(date);\n  };\n\n  const dateString = date.toLocaleDateString(\"en-US\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calendar View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: dateString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: task.date === dateString ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-listing\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tasks/${task.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Due on: \", task.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Subject: \", task.subject]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Priority: \", task.priority]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this) : console.log('None')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CalendarDisplay, \"TdWkZSSomDvTdDBuMGB05D4xN5I=\", false, function () {\n  return [useFetch];\n});\n\n_c = CalendarDisplay;\nexport default CalendarDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarDisplay\");","map":{"version":3,"sources":["C:/Users/Stevie/new-task-manager-app/src/Components/Calendar.js"],"names":["Calendar","useState","useFetch","CalendarDisplay","date","setDate","Date","data","tasks","isLoading","error","onChange","dateString","toLocaleDateString","map","task","id","title","subject","priority","console","log"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,kCAAP;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CAAhC;AACA,QAAM;AAACC,IAAAA,IAAI,EAAEC,KAAP;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAAkCR,QAAQ,CAAC,6BAAD,CAAhD;;AAEA,QAAMS,QAAQ,GAAGP,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMQ,UAAU,GAAGR,IAAI,CAACS,kBAAL,CAAwB,OAAxB,CAAnB;AAEA,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEF,QADZ;AAEE,MAAA,KAAK,EAAEP;AAFT;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,gBAAKQ;AAAL;AAAA;AAAA;AAAA;AAAA,YAPF,EASSJ,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT;AAAA,gBACGA,IAAI,CAACX,IAAL,KAAcQ,UAAd,gBACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASG,IAAI,CAACC,EAAG,EAA5B;AAAA,kCACA;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,mCAAYF,IAAI,CAACX,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA,oCAAaW,IAAI,CAACG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA,qCAAcH,IAAI,CAACI,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAmCJ,IAAI,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,cADD,GAUCI,OAAO,CAACC,GAAR,CAAY,MAAZ;AAXJ;AAAA;AAAA;AAAA;AAAA,YADD,CATT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BH,CAvCD;;GAAMlB,e;UAEsCD,Q;;;KAFtCC,e;AAyCN,eAAeA,eAAf","sourcesContent":["import Calendar from 'react-calendar'\r\nimport { useState } from 'react';\r\nimport useFetch from './useFetch';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst CalendarDisplay = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    const {data: tasks, isLoading, error} = useFetch('http://localhost:7000/tasks');\r\n\r\n    const onChange = date => {\r\n      setDate(date);\r\n    };\r\n    \r\n    const dateString = date.toLocaleDateString(\"en-US\")\r\n\r\n    return (\r\n      <div>\r\n          <h1>Calendar View</h1>\r\n        <Calendar\r\n          onChange={onChange}\r\n          value={date}\r\n  \r\n        />\r\n        <h3>{dateString}</h3>\r\n              {\r\n               tasks.map((task) => (\r\n                <div>\r\n                  {task.date === dateString ?( \r\n                    <div className=\"task-listing\" key={task.id}>\r\n                      <Link to={`/tasks/${task.id}`}>\r\n                      <h2>{task.title}</h2>\r\n                      <p>Due on: {task.date}</p>\r\n                      <p>Subject: {task.subject}</p>\r\n                      <p>Priority: {task.priority}</p>\r\n                      </Link>\r\n                    </div>\r\n                  ) : (\r\n                    console.log('None')\r\n                  )}\r\n                </div>                   \r\n            ))                \r\n              }     \r\n      </div>\r\n    );\r\n}\r\n \r\nexport default CalendarDisplay;"]},"metadata":{},"sourceType":"module"}