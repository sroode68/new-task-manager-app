{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stevie\\\\new-task-manager-app\\\\src\\\\Components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport TaskList from \"./TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [tasks, setTasks] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:7000/tasks').then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch data from server');\n      }\n\n      return res.json();\n    }).then(data => {\n      setTasks(data);\n      setIsLoading(false);\n      setError(null);\n    }).catch(err => {\n      setIsLoading(false);\n      setError(err.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this), tasks && /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"o3hGZ6ga9xs9/sDdu37+PiPMvvo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Stevie/new-task-manager-app/src/Components/Home.js"],"names":["useState","useEffect","TaskList","Home","tasks","setTasks","isLoading","setIsLoading","error","setError","fetch","then","res","ok","Error","json","data","catch","err","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAK,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAK,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACX,UAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACT,cAAMC,KAAK,CAAC,kCAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KAND,EAOCJ,IAPD,CAOMK,IAAI,IAAI;AACZX,MAAAA,QAAQ,CAACW,IAAD,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAXD,EAYCQ,KAZD,CAYOC,GAAG,IAAG;AACXX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACD,KAfD;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGX,KAAK,iBAAI;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGGF,KAAK,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhCH;;GAAMD,I;;KAAAA,I;AAkCJ,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nconst Home = () => {\r\n\r\n  const[tasks, setTasks] = useState(null)\r\n  const[isLoading, setIsLoading] = useState(true)\r\n  const[error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:7000/tasks')\r\n    .then(res => {\r\n      if(!res.ok){\r\n        throw Error('Could not fetch data from server');\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      setTasks(data)\r\n      setIsLoading(false)\r\n      setError(null);\r\n    })\r\n    .catch(err =>{\r\n      setIsLoading(false);\r\n      setError(err.message);\r\n    })\r\n  }, []);\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        {error && <div>{ error }</div>}\r\n        {isLoading && <div>Loading...</div>}\r\n        {tasks && <TaskList tasks={tasks}/>}\r\n      </div>\r\n    );\r\n  }\r\n   \r\n  export default Home;"]},"metadata":{},"sourceType":"module"}