{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stevie\\\\new-task-manager-app\\\\src\\\\Components\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'; //This compondnet gives the ability to create a task\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  //Initialization of task variables\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [subject, setSubject] = useState('Other');\n  const [priority, setPriority] = useState('Low');\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory(); //Function that fires once the form is submitted; submits all data to the json server then goes back to the home screen\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const task = {\n      title,\n      date,\n      subject,\n      priority\n    };\n    setIsLoading(true);\n    fetch('http://localhost:7000/tasks', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    }).then(() => {\n      console.log(\"New Task Added\");\n      setIsLoading(false);\n      history.push('/');\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //The following code is the user input from the form which is collected and pushed to the json server\n    _jsxDEV(\"div\", {\n      className: \"create\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Due Date (MM/DD/YYYY put M//DD/YYYY if the month is before October):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          value: subject,\n          onChange: e => setSubject(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Math\",\n            children: \"Math\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Science\",\n            children: \"Science\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Social Studies\",\n            children: \"Social Studies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"English\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"World Language\",\n            children: \"World Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Chores\",\n            children: \"Chores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hobbies\",\n            children: \"Hobbies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          value: priority,\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"Adding Task...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_s(Create, \"PdLppC9k4yebrYv0rFN3Y7PCQYo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/Stevie/new-task-manager-app/src/Components/Create.js"],"names":["useState","useHistory","Create","title","setTitle","date","setDate","subject","setSubject","priority","setPriority","isLoading","setIsLoading","history","handleSubmit","e","preventDefault","task","fetch","method","headers","body","JSON","stringify","then","console","log","push","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n//This compondnet gives the ability to create a task\r\nconst Create = () => {\r\n\r\n  //Initialization of task variables\r\n  const[title, setTitle] = useState('');\r\n  const[date, setDate] = useState('');\r\n  const[subject, setSubject] = useState('Other');\r\n  const[priority, setPriority] = useState('Low');\r\n  const[isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  //Function that fires once the form is submitted; submits all data to the json server then goes back to the home screen\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const task = { title, date, subject, priority }\r\n\r\n    setIsLoading(true);\r\n\r\n    fetch('http://localhost:7000/tasks', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(task)\r\n    }).then(() => {\r\n      console.log(\"New Task Added\");\r\n      setIsLoading(false);\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n    return (\r\n\r\n      //The following code is the user input from the form which is collected and pushed to the json server\r\n\r\n      <div className=\"create\">\r\n        <h2>Add a New Task</h2>\r\n        <form onSubmit={handleSubmit}>\r\n           \r\n           {/*Task Title input*/}\r\n\r\n          <label>Task Title:</label>\r\n          <input\r\n            type = \"text\"\r\n            required\r\n            value = {title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n\r\n          {/*Task date input*/}\r\n\r\n          <label>Task Due Date (MM/DD/YYYY put M//DD/YYYY if the month is before October):</label>\r\n          <input\r\n            type = \"text\"\r\n            required\r\n            value = {date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n\r\n          {/*Task subject input/dropdown*/}\r\n\r\n          <label>Task Subject:</label>\r\n          <select\r\n            required\r\n            value = {subject}\r\n            onChange={(e) => setSubject(e.target.value)}\r\n          >\r\n            <option value=\"Math\">Math</option>\r\n            <option value=\"Science\">Science</option>\r\n            <option value=\"Social Studies\">Social Studies</option>\r\n            <option value=\"English\">English</option>\r\n            <option value=\"World Language\">World Language</option>\r\n            <option value=\"Chores\">Chores</option>\r\n            <option value=\"Hobbies\">Hobbies</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n\r\n            {/*Task Priority input/dropdown*/}\r\n\r\n          <label>Task Priority</label>\r\n          <select\r\n            required\r\n            value = {priority}\r\n            onChange={(e) => setPriority(e.target.value)}\r\n            >\r\n              <option value=\"Low\">Low</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"High\">High</option>\r\n            </select>\r\n          \r\n          {!isLoading && <button>Add Task</button>}\r\n          {isLoading && <button disabled>Adding Task...</button>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n   \r\n  export default Create;"]},"metadata":{},"sourceType":"module"}